// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using danklibrary;

namespace dankapi.Data;

public partial class danknetContext : DbContext
{
    public danknetContext()
    {
        if (!File.Exists("./data/danknetlocal.db"))
        {
            Database.EnsureDeleted();
            Database.EnsureCreated();
        }
    }

    public danknetContext(DbContextOptions<danknetContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Asset> Assets { get; set; }

    public virtual DbSet<DashboardItem> DashboardItems { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlite("Data Source=./data/danknetlocal.db");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Asset>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("assets");

            entity.Property(e => e.Description)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Id)
                .IsRequired()
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ID");
            entity.Property(e => e.Keywords).IsUnicode(false);
            entity.Property(e => e.Location)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Picture).IsUnicode(false);
        });

        modelBuilder.Entity<DashboardItem>(entity =>
        {
            entity.ToTable("dashboard_items");

            entity.Property(e => e.ID);
            entity.Property(e => e.Description)
                .HasMaxLength(300)
                .IsUnicode(false);
            entity.Property(e => e.DisplayName)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Icon).IsUnicode(false);
            entity.Property(e => e.URL)
                .IsRequired()
                .HasMaxLength(150)
                .IsUnicode(false);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}